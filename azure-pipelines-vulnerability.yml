trigger: none  # Disable automatic triggering on push; use schedules instead

schedules:
  - cron: "0 9 * * *"  # Every day at 9:00 AM
    displayName: 'Daily Scan at 9 AM'
    branches:
      include:
        - master  # Adjust to the branch you want to run the scan on
    always: true

  - cron: "0 12 * * *"  # Every day at 12:00 PM
    displayName: 'Daily Scan at 12 PM'
    branches:
      include:
        - master  # Adjust to the branch you want to run the scan on
    always: true

  - cron: "0 17 * * *"  # Every day at 5:00 PM
    displayName: 'Daily Scan at 5 PM'
    branches:
      include:
        - master  # Adjust to the branch you want to run the scan on
    always: true

  - cron: "0 0 * * *"  # Every day at Midnight
    displayName: 'Daily Scan at Midnight'
    branches:
      include:
        - master  # Adjust to the branch you want to run the scan on
    always: true

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x'  # Specify the version of .NET SDK you are using

  - script: |
      # Restore non-SQL projects only
      for proj in $(find . -name "*.csproj"); do
        if [[ $proj != *".sqlproj"* ]]; then
          echo "Restoring packages for $proj"
          dotnet restore "$proj"
        else
          echo "Skipping restore for SQL project $proj"
        fi
      done
    displayName: 'Restore .NET Packages (excluding SQL projects)'

  - script: |
      # Check for vulnerabilities in non-SQL projects only
      for proj in $(find . -name "*.csproj"); do
        if [[ $proj != *".sqlproj"* ]]; then
          echo "Checking vulnerabilities for $proj"
          dotnet list "$proj" package --vulnerable | tee -a vulnerability_scan.log
        else
          echo "Skipping vulnerability check for SQL project $proj"
        fi
      done
    displayName: 'Check for Vulnerable Packages (excluding SQL projects)'

  # Optional: Fail the build if vulnerabilities are found
  - script: |
      if grep -q "Vulnerable" vulnerability_scan.log; then
        echo "Vulnerabilities found. Failing the build."
        exit 1
      else
        echo "No vulnerabilities detected."
      fi
    displayName: 'Fail build on vulnerabilities'
